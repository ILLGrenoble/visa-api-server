<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
                 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_2.xsd"
                 version="2.2">
    <named-query name="plan.getById">
        <query>
            SELECT p
            FROM Plan p
            LEFT JOIN p.image i
            LEFT JOIN p.flavour f
            LEFT JOIN i.cloudProviderConfiguration cpc
            WHERE p.id = :id
            AND i.deleted = false
            AND f.deleted = false
            AND p.deletedAt IS null
            AND cpc.deletedAt IS NULL
        </query>
    </named-query>

    <named-query name="plan.getAll">
        <query>
            SELECT p
            FROM Plan p
            LEFT JOIN p.image i
            LEFT JOIN p.flavour f
            LEFT JOIN i.cloudProviderConfiguration cpc
            WHERE i.deleted = false
            AND f.deleted = false
            AND i.visible = true
            AND p.deletedAt IS null
            AND cpc.deletedAt IS NULL
            AND COALESCE(cpc.visible, true) = true
            ORDER BY p.id
        </query>
    </named-query>

    <named-query name="plan.getAllForAdmin">
        <query>
            SELECT p
            FROM Plan p
            LEFT JOIN p.image i
            LEFT JOIN p.flavour f
            LEFT JOIN i.cloudProviderConfiguration cpc
            WHERE i.deleted = false
            AND f.deleted = false
            AND p.deletedAt IS null
            AND cpc.deletedAt IS NULL
            ORDER BY p.id
        </query>
    </named-query>

    <named-query name="plan.countAllForAdmin">
        <query>
            SELECT COUNT(p)
            FROM Plan p
            LEFT JOIN p.image i
            LEFT JOIN p.flavour f
            LEFT JOIN i.cloudProviderConfiguration cpc
            WHERE i.deleted = false
            AND f.deleted = false
            AND p.deletedAt IS null
            AND cpc.deletedAt IS NULL
        </query>
    </named-query>

    <named-query name="plan.getAllForInstrumentIds">
        <query>
            SELECT DISTINCT p
            FROM Plan p
            LEFT JOIN p.image i
            LEFT JOIN p.flavour f
            LEFT JOIN i.cloudProviderConfiguration cpc
            LEFT OUTER JOIN FlavourLimit fl ON fl.flavour.id = p.flavour.id AND fl.objectType = 'INSTRUMENT'
            WHERE i.deleted = false
            AND f.deleted = false
            AND p.deletedAt IS null
            AND cpc.deletedAt IS NULL
            AND i.visible = true
            AND COALESCE(cpc.visible, true) = true
            AND (fl.objectId IN :instrumentIds OR fl.objectId IS NULL)
            ORDER BY p.id
        </query>
    </named-query>

    <named-query name="plan.getAllForExperimentIds">
        <query>
            SELECT DISTINCT p
            FROM Plan p
            LEFT JOIN p.image i
            LEFT JOIN p.flavour f
            LEFT JOIN i.cloudProviderConfiguration cpc
            LEFT OUTER JOIN FlavourLimit fl ON fl.flavour.id = p.flavour.id AND fl.objectType = 'INSTRUMENT'
            LEFT OUTER JOIN Experiment e ON e.instrument.id = fl.objectId
            WHERE i.deleted = false
            AND f.deleted = false
            AND p.deletedAt IS null
            AND cpc.deletedAt IS NULL
            AND i.visible = true
            AND COALESCE(cpc.visible, true) = true
            AND (e.id IN :experimentIds OR fl.objectId IS NULL)
            ORDER BY p.id
        </query>
    </named-query>

    <named-query name="plan.getAllForUserAndExperimentIds">
        <query>
            SELECT DISTINCT p
            FROM Plan p
            LEFT JOIN p.image i
            LEFT JOIN p.flavour f
            LEFT JOIN i.cloudProviderConfiguration cpc
            LEFT OUTER JOIN FlavourLimit ifl ON ifl.flavour.id = p.flavour.id AND ifl.objectType = 'INSTRUMENT'
            LEFT OUTER JOIN Experiment e ON e.instrument.id = ifl.objectId
            LEFT OUTER JOIN InstrumentScientist ir on ir.instrument.id = ifl.objectId
            LEFT OUTER JOIN FlavourLimit rfl ON rfl.flavour.id = p.flavour.id AND rfl.objectType = 'ROLE'
            LEFT OUTER JOIN UserRole ur on ur.role.id = rfl.objectId
            LEFT OUTER JOIN Role r on r.id = ur.role.id
            WHERE i.deleted = false
            AND f.deleted = false
            AND p.deletedAt IS null
            AND cpc.deletedAt IS NULL
            AND i.visible = true
            AND COALESCE(cpc.visible, true) = true
            AND r.groupDeletedAt IS NULL
            AND (ir.user = :user OR ur.user = :user OR e.id IN :experimentIds OR (ifl.objectId IS NULL AND rfl.objectId IS NULL))
            ORDER BY p.id
        </query>
    </named-query>

    <named-query name="plan.getAllForAllInstruments">
        <query>
            SELECT DISTINCT p
            FROM Plan p
            LEFT JOIN p.image i
            LEFT JOIN p.flavour f
            LEFT JOIN i.cloudProviderConfiguration cpc
            LEFT OUTER JOIN FlavourLimit fl ON fl.flavour.id = p.flavour.id AND fl.objectType = 'INSTRUMENT'
            WHERE i.deleted = false
            AND f.deleted = false
            AND p.deletedAt IS null
            AND cpc.deletedAt IS NULL
            AND i.visible = true
            AND COALESCE(cpc.visible, true) = true
            AND fl.objectId IS NULL
            ORDER BY p.id
        </query>
    </named-query>

    <named-query name="plan.getAllForUserAndAllInstruments">
        <query>
            SELECT DISTINCT p
            FROM Plan p
            LEFT JOIN p.image i
            LEFT JOIN p.flavour f
            LEFT JOIN i.cloudProviderConfiguration cpc
            LEFT OUTER JOIN FlavourLimit ifl ON ifl.flavour.id = p.flavour.id AND ifl.objectType = 'INSTRUMENT'
            LEFT OUTER JOIN InstrumentScientist ir on ir.instrument.id = ifl.objectId
            LEFT OUTER JOIN FlavourLimit rfl ON rfl.flavour.id = p.flavour.id AND rfl.objectType = 'ROLE'
            LEFT OUTER JOIN UserRole ur on ur.role.id = rfl.objectId
            LEFT OUTER JOIN Role r on r.id = ur.role.id
            WHERE i.deleted = false
            AND f.deleted = false
            AND p.deletedAt IS null
            AND cpc.deletedAt IS NULL
            AND i.visible = true
            AND COALESCE(cpc.visible, true) = true
            AND r.groupDeletedAt IS NULL
            AND (ir.user = :user OR ur.user = :user OR (ifl.objectId IS NULL AND rfl.objectId IS NULL))
            ORDER BY p.id
        </query>
    </named-query>

    <entity class="eu.ill.visa.core.domain.Plan">
        <table name="plan"/>
        <attributes>
            <id name="id">
                <column name="id" nullable="false"/>
                <generated-value strategy="IDENTITY"/>
            </id>
            <basic name="preset">
                <column name="preset" nullable="false" />
            </basic>
            <basic name="deletedAt">
                <column name="deleted_at" nullable="true"/>
            </basic>
            <many-to-one name="flavour">
                <join-column name="flavour_id"/>
                <foreign-key name="fk_flavour_id"/>
            </many-to-one>
            <many-to-one name="image">
                <join-column name="image_id"/>
                <foreign-key name="fk_image_id"/>
            </many-to-one>
        </attributes>

    </entity>

</entity-mappings>
