quarkus:
  http:
    root-path: /api
    port: ${VISA_SERVER_PORT:8086}
    host: ${VISA_SERVER_HOST:localhost}
    test-port: 8081
    test-ssl-port: 8446
    access-log:
      enabled: ${VISA_LOGGING_ACCESS_LOG_ENABLED:true}
    cors:
      ~: true
      origins:  ${VISA_CORS_ORIGIN:*}
      methods: GET,POST,PATCH,PUT,DELETE,OPTIONS
#      headers: Authorisation,Content-Type
  hibernate-orm:
    database:
      generation: update
  scheduler:
    enabled: ${VISA_SCHEDULER_ENABLED:true}
  devservices:
    enabled: true
  mailer:
    mock: ${VISA_NOTIFICATION_EMAIL_ADAPTER_MOCKED:false}
    host: ${VISA_NOTIFICATION_EMAIL_ADAPTER_HOST:change.mail.com}
    port: ${VISA_NOTIFICATION_EMAIL_ADAPTER_PORT:25}
    tls: ${VISA_NOTIFICATION_EMAIL_ADAPTER_TLS:false}
    start-tls: ${VISA_NOTIFICATION_EMAIL_ADAPTER_START_TLS:DISABLED}
    logging:
      mock: ${VISA_LOGGING_EMAIL_APPENDER_MOCKED:false}
      host: ${VISA_LOGGING_EMAIL_APPENDER_HOST:change.mail.com}
      port: ${VISA_LOGGING_EMAIL_APPENDER_PORT:25}
      tls: ${VISA_LOGGING_EMAIL_APPENDER_TLS:false}
      start-tls: ${VISA_LOGGING_EMAIL_APPENDER_START_TLS:DISABLED}
  rest-client:
#    logging:
#      scope: request-response
#      body-limit: 1000
    account-service:
      url: ${VISA_ACCOUNTS_SERVICE_CLIENT_URL}
  native:
    resources:
      includes: images/thumbnail.jpg,fixtures/**.sql,words/**.txt,emails/templates/**.twig
    additional-build-args:
     - --initialize-at-run-time=eu.ill.visa.business.services.InstanceNameGeneratorService,zmq.util.Utils
  security:
    security-providers: BC
  log:
    console:
      filter: error-email-filter
    file:
      enable: ${VISA_LOGGING_FILE_ENABLED:true}
      path: ${VISA_LOGGING_FILE_DIRECTORY:/tmp}/application.log
      format: ${VISA_LOGGING_FILE_FORMAT}
      level: ${VISA_LOGGING_FILE_THRESHOLD:INFO}
      rotation:
        max-file-size: ${VISA_LOGGING_FILE_MAX_FILE_SIZE:100M}
        max-backup-index: ${VISA_LOGGING_FILE_ARCHIVED_FILE_COUNT:0}
    syslog:
      enable: ${VISA_LOGGING_SYSLOG_ENABLED:true}
      syslog-type: ${VISA_LOGGING_SYSLOG_TYPE:rfc3164}
      endpoint: ${VISA_LOGGING_SYSLOG_ENDPOINT:change.logs.com:514}
      format: ${VISA_LOGGING_SYSLOG_FORMAT}
      app-name: ${VISA_LOGGING_SYSLOG_APP_NAME}
      facility: ${VISA_LOGGING_SYSLOG_FACILITY:local-use-0}
      level: ${VISA_LOGGING_SYSLOG_THRESHOLD:INFO}
      truncate: false
    category:
      "eu.ill.visa":
        level: ${VISA_LOGGING_LEVEL:INFO}
      "org.apache.guacamole":
        level: INFO
#      "org.jboss.resteasy.reactive.client.logging":
#        level: DEBUG

cloud:
  defaultProviderEnabled: ${VISA_CLOUD_DEFAULT_PROVIDER_ENABLED:true}
  serverNamePrefix: ${VISA_CLOUD_SERVER_NAME_PREFIX}
  providerType: ${VISA_DEFAULT_CLOUD_PROVIDER_TYPE:openstack}
  providerName: ${VISA_DEFAULT_CLOUD_PROVIDER_NAME:Default}
  providers:
    - name: openstack
      parameters:
        identityEndpoint: ${VISA_CLOUD_IDENTITY_ENDPOINT}
        computeEndpoint: ${VISA_CLOUD_COMPUTE_ENDPOINT}
        imageEndpoint: ${VISA_CLOUD_IMAGE_ENDPOINT}
        networkEndpoint: ${VISA_CLOUD_NETWORK_ENDPOINT}
        applicationId: ${VISA_CLOUD_APPLICATION_ID}
        applicationSecret: ${VISA_CLOUD_APPLICATION_SECRET}
        addressProvider: ${VISA_CLOUD_ADDRESS_PROVIDER}
        addressProviderUUID: ${VISA_CLOUD_ADDRESS_PROVIDER_UUID}
    - name: web
      parameters:
        url: ${VISA_CLOUD_WEB_PROVIDER_URL}
        authToken: ${VISA_CLOUD_WEB_PROVIDER_AUTH_TOKEN}

business:
  numberInstanceActionThreads: 16
  instance:
    # Defaults to 14 days
    userMaxLifetimeDurationHours: ${VISA_INSTANCE_USER_MAX_LIFETIME_DURATION_HOURS:336}
    # Defaults to 60 days
    staffMaxLifetimeDurationHours: ${VISA_INSTANCE_STAFF_MAX_LIFETIME_DURATION_HOURS:1440}
    # Defaults to 4 days
    userMaxInactivityDurationHours: ${VISA_INSTANCE_USER_MAX_INACTIVITY_DURATION_HOURS:96}
    # Defaults to 8 days
    staffMaxInactivityDurationHours: ${VISA_INSTANCE_STAFF_MAX_INACTIVITY_DURATION_HOURS:192}
    defaultUserInstanceQuota: ${VISA_INSTANCE_USER_DEFAULT_QUOTA:2}
    activityRetentionPeriodDays: ${VISA_INSTANCE_ACTIVITY_RETENTION_PERIOD_DAYS:0}
    portCheckTimeoutMs: ${VISA_INSTANCE_PORT_CHECK_TIMEOUT_MS:5000}
  mailer:
    rootURL: ${VISA_ROOT_URL}
    enabled: ${VISA_NOTIFICATION_EMAIL_ADAPTER_ENABLED:false}
    fromEmailAddress: ${VISA_NOTIFICATION_EMAIL_ADAPTER_FROM_EMAIL_ADDRESS}
    bccEmailAddress: ${VISA_NOTIFICATION_EMAIL_ADAPTER_BCC_EMAIL_ADDRESS:}
    devEmailAddress: ${VISA_NOTIFICATION_EMAIL_ADAPTER_DEV_EMAIL_ADDRESS:}
    adminEmailAddress: ${VISA_NOTIFICATION_EMAIL_ADAPTER_ADMIN_EMAIL_ADDRESS:}
    emailTemplatesDirectory: ${VISA_NOTIFICATION_EMAIL_ADAPTER_TEMPLATES_DIRECTORY:emails/templates/}
  errorReportEmail:
    enabled: ${VISA_LOGGING_EMAIL_APPENDER_ENABLED:false}
    to:
      - ${VISA_LOGGING_EMAIL_APPENDER_RECIPIENT_ADDRESS}
    from: ${VISA_LOGGING_EMAIL_APPENDER_FROM_ADDRESS}
    subject: ${VISA_LOGGING_EMAIL_SUBJECT}
    maxErrors: ${VISA_LOGGING_EMAIL_MAX_ERRORS:50}
  signature:
    privateKeyPath: ${VISA_VDI_SIGNATURE_PRIVATE_KEY_PATH}
    publicKeyPath: ${VISA_VDI_SIGNATURE_PUBLIC_KEY_PATH}
  securityGroupServiceClient:
    enabled: ${VISA_SECURITY_GROUP_SERVICE_CLIENT_ENABLED:false}
    url: ${VISA_SECURITY_GROUP_SERVICE_CLIENT_URL}
    authToken: ${VISA_SECURITY_GROUP_SERVICE_CLIENT_AUTH_TOKEN}

broker:
  redisEnabled: ${VISA_VDI_REDIS_ENABLED:false}
  redisURL: ${VISA_VDI_REDIS_URL}
  redisPassword: ${VISA_VDI_REDIS_PASSWORD}
  redisDatabase: ${VISA_VDI_REDIS_DATABASE:0}

vdi:
  enabled: ${VISA_VDI_ENABLED:true}
  ownerDisconnectionPolicy: ${VISA_VDI_OWNER_DISCONNECTION_POLICY:DISCONNECT_ALL}
  cleanupSessionsOnStartup: ${VISA_VDI_CLEANUP_SESSIONS_ON_STARTUP:false}
  protocol: ${VISA_VDI_GUACD_PARAMETER_PROTOCOL:rdp}
  guacd:
    ignore-cert: ${VISA_VDI_GUACD_PARAMETER_IGNORE_CERT:true}
    port: ${VISA_VDI_GUACD_PARAMETER_PORT:3389}

client:
  login:
    issuer: ${VISA_CLIENT_CONFIG_LOGIN_ISSUER}
    clientId: ${VISA_CLIENT_CONFIG_LOGIN_CLIENT_ID}
    scope: ${VISA_CLIENT_CONFIG_LOGIN_SCOPE:openid offline_access}
    showDebugInformation: ${VISA_CLIENT_CONFIG_LOGIN_SHOW_DEBUG_INFORMATION:false}
    sessionChecksEnabled: ${VISA_CLIENT_CONFIG_LOGIN_SESSION_CHECKS_ENABLED:true}
  analytics:
    enabled: ${VISA_CLIENT_CONFIG_ANALYTICS_ENABLED:false}
    url: ${VISA_CLIENT_CONFIG_ANALYTICS_URL}
    siteId: ${VISA_CLIENT_CONFIG_ANALYTICS_SITE_ID}
  desktop:
    allowedClipboardUrlHosts: ${VISA_CLIENT_CONFIG_DESKTOP_ALLOWED_CLIPBOARD_URL_HOSTS:[]}
    keyboardLayouts: ${VISA_CLIENT_CONFIG_DESKTOP_KEYBOARD_LAYOUTS:[]}
  contactEmail: ${VISA_CLIENT_CONFIG_CONTACT_EMAIL}
  experiments:
    openDataIncluded: ${VISA_CLIENT_CONFIG_INCLUDE_OPEN_DATA:false}

"%prod":
  quarkus:
    datasource:
      username: ${VISA_DATABASE_USERNAME}
      password: ${VISA_DATABASE_PASSWORD}
      jdbc:
        url: ${VISA_DATABASE_URL}
      db-kind: postgresql
      db-version: ${VISA_DATABASE_VERSION}
    redis:
      hosts-provider-name: redis-pubsub-hosts-provider
      tls:
        enabled: ${VISA_VDI_REDIS_TLS_ENABLED:false}
        trust-all: ${VISA_VDI_REDIS_TLS_TRUST_ALL:false}
      devservices:
        enabled: false

"%dev":
  quarkus:
    hibernate-orm:
      log:
        sql: ${VISA_LOGGING_SQL_ENABLED:false}
    datasource:
      username: ${VISA_DATABASE_USERNAME}
      password: ${VISA_DATABASE_PASSWORD}
      jdbc:
        url: ${VISA_DATABASE_URL}
      db-kind: postgresql
      db-version: ${VISA_DATABASE_VERSION}
    redis:
      hosts-provider-name: redis-pubsub-hosts-provider
      tls:
        enabled: ${VISA_VDI_REDIS_TLS_ENABLED:false}
        trust-all: ${VISA_VDI_REDIS_TLS_TRUST_ALL:false}
      devservices:
        enabled: false

"%test":
  quarkus:
    scheduler:
      enabled: false
    log:
      level: info
      console:
        enable: true
      file:
        enable: false
        format: "[%-5p] [%c{3.}] (%t) %s%e%n"
      syslog:
        enable: false
        format: "[%-5p] [%c{3.}] (%t) %s%e%n"
    hibernate-orm:
      log:
        sql: false
      database:
        generation: create
      sql-load-script: fixtures.sql
    datasource:
      devservices:
        enabled: true
    mailer:
      mock: true
      host: mailer.com
      logging:
        host: mailer.com
        mock: true
    rest-client:
      account-service:
        url: accounts.dummy.org
      security-group-service:
        url: security-groups.dummy.org
    devservices:
      enabled: true
      timeout: 5m

  business:
    securityGroupServiceClient:
      enabled: false
    mailer:
      enabled: false

  cloud:
    serverNamePrefix: visa-instance
    providerType: null
    providerName: Default
